// 第1章 绪论

for (int i = 0; i <= n; ++i)
  for (int j = 1; j <= i; j++)
    S;

for (int i = 1; i <= n; ++i)
  for (int j = 1; j <= i; j++)
    for (int k = 1; k <= j; k++)
      S;

/*
数据结构是指相互之间存在着一种或多种关系的数据元素的集合。
数据结构是一个二元组Data_Structure = (D, R)，其中D是数据元素的有限集，
R是D上关系的有限集。

逻辑结构是指数据之间的相互关系。通常分为四类：
(1)集合
(2)线性结构
(3)树型结构
(4)图状结构

存储结构是指数据结构在计算机中的表示，又称数据的物理结构。
通常由四种基本的存储方法实现：
(1)顺序存储方式
(2)链式存储方式
(3)索引存储方式
    除数据元素存储在一组地址连续的内存空间外，还需建立一个索引表。
    索引表中索引指示存储结点的存储位置（下标）或存储区间端点（下标）。？？？
(4)散列存储方式
    通过散列函数和解决地址冲突的方法，将关键字散列在连续的、有限的地址空间内，
    并将散列函数的值解释成关键字所在元素的存储地址。
    其特点是存取速度快，只能按关键字随机存取，不能顺序存取，也不能折半存取。

算法：
    (1)有穷性
    (2)确定性
    (3)可行性
    (4)输入
    (5)输出

时间复杂度
    T(n) = O(f(n))
    O(l) < O(log2n) < O(n) < O(nlog2n) < O(n^2) < O(n^3) < O(2^n) < O(n!) <
O(n^n)

空间复杂度
    原地工作
*/

void f(int n) {
  int x = 1;

  while (x < n)
    x = 2 * x;
}
/*
    基本运算是语句 x = 2*x，设其执行时间为 T(n) ，则有 2^T(n) <= T(n)，即T(n) <
   log2n = O(log2n)。
*/

void f(int n) {
  int i = 0;

  while (i * i * i <= n)
    i++;
}
/*
    基本运算是语句 i++，设其执行时间为 T(n)，则有T(n)*T(n)*T(n) <= n，即T(n) <=
   n^(1/3) = O(n^(1/3))。
*/
