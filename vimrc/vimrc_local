" 打开语法高亮
syntax on
" 设置缩进有三个取值cindent(c风格)、smartindent(智能模式，其实不觉得有什么智能)、autoindent(简单的与上一行保持一致)
set cindent
" 在windows版本中vim的退格键模式默认与vi兼容，与我们的使用习惯不太符合，下边这条可以改过来
set backspace=indent,eol,start
" 用空格键替换制表符
set expandtab
" 制表符占4个空格
set tabstop=4
" 默认缩进4个空格大小
set shiftwidth=4
" 增量式搜索
set incsearch
" 高亮搜索
set hlsearch
" 设置行号
set number
" 有时中文会显示乱码，用一下几条命令解决
" set fileencoding
" set fileencodings=utf-8
" 很多插件都会要求的配置检测文件类型

set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set encoding=utf-8
set termencoding=cp936
language messages zh_CN.UTF-8
let &termencoding=&encoding

filetype on
filetype plugin on
filetype indent on
" 编码检测

" 离开normal模式立即切换为英文输入法
set noimdisable
" 共享系统剪贴板
set clipboard=unnamed

" 命令行补全以增强模式运行
set wildmenu
set wildmode=full

" 解决移动问题
nnoremap j gj
nnoremap k gk

" 解决ESC问题
inoremap jk <esc>

" 设置缓冲区
set hidden

" 设置查找路径
set path+=~/Documents/GitHub/**

" 设置字典，gitbash环境所限
set dictionary+=~/.vim/dict/usa

" c-n and c-p
set complete-=k complete+=k

" 5秒自动保存一次
let autosave=5

" 自动保存
autocmd InsertLeave *.md write

" 设定新窗口位置
set splitright
set splitbelow

" 折叠
" set foldmethod=indent
" set foldlevel=99


" 很好玩的映射，稍后设置
nnoremap <space> za

" 解决搜索后的高亮问题
nnoremap N :nohl<cr>

" 保存文件，为了适应我得手残习惯
nnoremap S :w<cr>

map <C5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'c'
        exec "!g++ % ‐o %<"
        exec "!time ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % ‐o %<"
        exec "!time ./%<"
    elseif &filetype == 'java'
        exec "!javac %"
        exec "!time java %<"
    elseif &filetype == 'sh'
        :!time bash %
    elseif &filetype == 'python'
        exec "!time python %"
    elseif &filetype == 'html'
        exec "!firefox % &"
    elseif &filetype == 'go'
        " exec "!go build %<"
        exec "!time go run %"
    elseif &filetype == 'mkd'
        exec "!~/.vim/markdown.pl % > %.html &"
        exec "!firefox %.html &"
    endif
endfunc

" repeat
silent! call repeat#set("\<Plug>MyWonderfulMap", v:count)
